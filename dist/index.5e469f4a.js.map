{"mappings":"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","sources":["scripts.js"],"sourcesContent":["\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\nlet phiChart;\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCaewNUV7i50S4DYMVgzBLVg2Rc8dJpmLk\",\r\n  authDomain: \"phi-of-t.firebaseapp.com\",\r\n  projectId: \"phi-of-t\",\r\n  storageBucket: \"phi-of-t.appspot.com\",\r\n  messagingSenderId: \"134964093529\",\r\n  appId: \"1:134964093529:web:9537a8951d77d4ceac8748\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Initialize Firestore\r\nconst firestore = firebase.firestore();\r\n\r\n// Select the registration form elements\r\nconst registerButton = document.getElementById('register-button');\r\nconst registerForm = document.getElementById('register-form');\r\nconst registerEmailInput = document.getElementById('register-email');\r\nconst registerPasswordInput = document.getElementById('register-password');\r\nconst submitRegisterButton = document.getElementById('submit-register');\r\n\r\n// Attach click event listeners to the register button and submit button\r\nregisterButton.addEventListener('click', () => {\r\n  registerForm.style.display = 'block';\r\n});\r\nsubmitRegisterButton.addEventListener('click', registerWithEmailAndPassword);\r\n\r\n// Register with email and password function\r\nfunction registerWithEmailAndPassword() {\r\n  const email = registerEmailInput.value;\r\n  const password = registerPasswordInput.value;\r\n  firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // User registered successfully\r\n      const user = userCredential.user;\r\n      console.log('User registered:', user);\r\n      registerForm.style.display = 'none';\r\n    })\r\n    .catch((error) => {\r\n      // An error occurred during registration\r\n      console.error('Error registering:', error);\r\n    });\r\n}\r\n\r\n\r\n// Select the form elements\r\nconst signInButton = document.getElementById('sign-in-button');\r\nconst signInForm = document.getElementById('sign-in-form');\r\nconst emailInput = document.getElementById('email');\r\nconst passwordInput = document.getElementById('password');\r\nconst submitSignInButton = document.getElementById('submit-sign-in');\r\nconst phiForm = document.getElementById('phi-form');\r\nconst phiValueInput = document.getElementById('phi-value');\r\nconst submitPhiButton = document.getElementById('submit-phi');\r\n\r\n// Attach click event listeners to the sign-in button and submit button\r\nsignInButton.addEventListener('click', () => {\r\n  signInForm.style.display = 'block';\r\n});\r\nsubmitSignInButton.addEventListener('click', signInWithEmailAndPassword);\r\n\r\n// Sign in with email and password function\r\nfunction signInWithEmailAndPassword() {\r\n  const email = emailInput.value;\r\n  const password = passwordInput.value\r\n  firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // User signed in successfully\r\n      const user = userCredential.user;\r\n      console.log('User signed in:', user);\r\n      signInForm.style.display = 'none';\r\n    })\r\n    .catch((error) => {\r\n      // An error occurred during sign-in\r\n      console.error('Error signing in:', error);\r\n    });\r\n}\r\n\r\n// Check for user state changes\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n  if (user) {\r\n    // User is signed in\r\n    console.log('User is signed in:', user);\r\n    signInButton.style.display = 'none';\r\n    phiForm.style.display = 'block';\r\n  } else {\r\n    // User is signed out\r\n    console.log('User is signed out');\r\n    signInButton.style.display = 'block';\r\n    phiForm.style.display = 'none';\r\n  }\r\n  document.getElementById('app').style.display = 'block';\r\n\r\n});\r\n\r\n// Attach a click event listener to the submit button\r\nsubmitPhiButton.addEventListener('click', savePhiValue);\r\n\r\n// Save the Phi value and timestamp to Firestore\r\nasync function savePhiValue() {\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (!user) {\r\n    alert('Please sign in to submit Phi value');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const phiValue = parseFloat(phiValueInput.value);\r\n    const timestamp = new Date();\r\n    await firestore.collection('phi-values').add({\r\n      uid: user.uid,\r\n      phi: phiValue,\r\n      timestamp: timestamp,\r\n    });\r\n    console.log('Phi value saved successfully');\r\n    alert('Phi value saved successfully');\r\n  } catch (error) {\r\n    console.error('Error saving Phi value:', error);\r\n    alert('Error saving Phi value');\r\n  }\r\n}\r\nconst viewPhiButton = document.getElementById('view-phi-button');\r\nconst phiChartElement = document.getElementById('phi-chart');\r\n\r\n// Attach a click event listener to the view button\r\nviewPhiButton.addEventListener('click', displayPhiValues);\r\n\r\n// Fetch and display the Phi values\r\nasync function displayPhiValues() {\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (!user) {\r\n    alert('Please sign in to view Phi values');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const phiValuesSnapshot = await firestore.collection('phi-values')\r\n      .where('uid', '==', user.uid)\r\n      .orderBy('timestamp', 'asc')\r\n      .get();\r\n      \r\n      const phiData = phiValuesSnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        return {\r\n          phi: data.phi,\r\n          timestamp: data.timestamp.toDate(),\r\n        };\r\n      });\r\n      \r\n    \r\n    createChart(phiData);\r\n  } catch (error) {\r\n    console.error('Error fetching Phi values:', error);\r\n    alert('Error fetching Phi values');\r\n  }\r\n}\r\n\r\nfunction createChart(phiData) {\r\n  const ctx = phiChartElement.getContext(\"2d\");\r\n\r\n  if (phiChart) {\r\n    phiChart.destroy();\r\n  }\r\n\r\n  const labels = phiData.map((data) => data.timestamp);\r\n  const dataPoints = phiData.map((data) => data.phi);\r\n\r\n  // Register the date-fns adapter\r\n  Chart.register(adapterDateFns);\r\n\r\n\r\n  phiChart = new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: labels,\r\n      datasets: [{\r\n        label: 'Phi(t)',\r\n        data: dataPoints,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 2,\r\n      }]\r\n    },\r\n    options: {\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            parser: 'date-fns', // <- Add this line to use the date-fns adapter\r\n            unit: 'day',\r\n            displayFormats: {\r\n              day: 'MMM d',\r\n            },\r\n            tooltipFormat: 'MMM d, yyyy',\r\n            minUnit: 'day',\r\n          },\r\n          ticks: {\r\n            source: 'data',\r\n          },\r\n        },\r\n        y: {\r\n          min: -20,\r\n          max: 20,\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  phiChartElement.style.display = \"block\";\r\n}\r\nfunction displayPhiValues() {\r\n  const user = firebase.auth().currentUser;\r\n\r\n  if (user) {\r\n    const phiRef = firebase.firestore().collection('phi').doc(user.uid);\r\n    phiRef.get().then((doc) => {\r\n      if (doc.exists) {\r\n        const data = doc.data();\r\n        const phiValues = data.phiValues;\r\n        const timestamps = data.timestamps; // Assuming you have a field named \"timestamps\" containing the timestamps\r\n\r\n        createChart(phiValues, timestamps);\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    }).catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n}\r\n\r\n}\r\n)\r\n"],"names":[],"version":3,"file":"index.5e469f4a.js.map","sourceRoot":"/__parcel_source_root/"}